# Setup Oh-My-ZSH
export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME=""
zstyle ':omz:update' mode auto
plugins=(git zsh-autosuggestions pip docker vagrant ubuntu poetry gh command-not-found ansible gitignore rust screen sudo tldr emoji git-extras ansible)
source $ZSH/oh-my-zsh.sh
eval "$(starship init zsh)"

# Shell options
HISTSIZE=1000
SAVEHIST=1000  # Save most-recent 1000 lines
HISTFILE=~/.zsh_history
setopt auto_cd
setopt rm_star_silent
export SHELL=$(which zsh)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Environment variables
export GOBIN=/usr/local/go/bin
export PATH=$GOBIN:$PATH
export ANSIBLE_NOCOWS=1

# Setup Pyenv
if [ -d $HOME/.pyenv ]; then
  export PYENV_ROOT="$HOME/.pyenv"
  export PATH="$PYENV_ROOT/bin:$PATH"
  export PATH="$PYENV_ROOT/shims:$PATH"
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
  VIRTUAL_ENV_DISABLE_PROMPT=1
  plugins=(virtualenv pip)
fi

# Setup autocomplete for Ansible molecule
if command -v molecule >/dev/null; then
  eval "$(_MOLECULE_COMPLETE=zsh_source molecule)"
fi


# Command overload
if command -v icdiff >/dev/null 2>&1; then
  alias diff='icdiff'
fi
if command -v nvim >/dev/null 2>&1; then
  alias vim="nvim"
fi
if command -v btop >/dev/null 2>&1; then
  alias top="btop"
fi
if command -v batcat >/dev/null 2>&1; then
  alias cat="batcat"
fi
if command -v lsd >/dev/null 2>&1; then
  alias ls="lsd"
fi
if command -v procs >/dev/null 2>&1; then
  alias ps="procs"
fi
if command -v ping >/dev/null 2>&1; then
  alias ping="gping"
fi
if command -v direnv >/dev/null 2>&1; then
  eval "$(direnv hook zsh)"
fi
alias rm="rm --interactive=never"
alias map="telnet mapscii.me"

export PATH=$PATH:/opt/nvim-linux-x86_64/bin
export PATH=$PATH:$HOME/.pyenv/versions/3.10.14/bin

# Load Update Functions if on Debian
if [ -f $HOME/.zsh_update_apps ]; then
  source $HOME/.zsh_update_apps
fi

# Source Cargo if installed
if [ -d "$HOME/.cargo" ]; then
  . "$HOME/.cargo/env"
fi

# Setup NVM and npm
export NVM_DIR=$HOME/.nvm
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
nvm_installed=$(nvm list | head -n 1 | awk -F '[v.]' '{print $2}' | xargs)
echo $nvm_installed > $HOME/.nvmrc

# Setup FZF if installed
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Add UV autocomplete
if command -v uv >/dev/null; then
  eval "$(uv generate-shell-completion zsh)"
  _uv_run_mod() {
      if [[ "$words[2]" == "run" && "$words[CURRENT]" != -* ]]; then
          _arguments '*:filename:_files'
      else
          _uv "$@"
      fi
  }
  compdef _uv_run_mod uv
fi

if command -v zoxide >/dev/null; then
  eval "$(zoxide init zsh)"
fi

fpath+=~/.zsh/completion
autoload -Uz compinit
compinit

if command -v aws > /dev/null 2>&1; then
  complete -C '/usr/local/bin/aws_completer' aws
fi
